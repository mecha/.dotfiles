#! /bin/env bash

projects_path="/home/miguel/dev/work/containers"

docker_menu() {
    list=$"$(find_projects)\nKill all"
    selected="$(echo -e "$list" | fzf --ansi --reverse --prompt "> ")"

    if [[ -z "$selected" ]]; then
        exit 1
    fi

    if [[ "$selected" == "Kill all" ]]; then
        docker kill $(docker ps -q)
    else
        project_name="$(awk '{print $2}' <<< "$selected")"
        toggle_project "$project_name"
    fi
}

toggle_project() {
    name="$1"

    if [[ "$(is_running "$name")" == "0" ]]; then
        echo "Starting $name..."
        (cd "$projects_path/$name" && docker compose up -d)
    else
        echo "Stopping $name..."
        (cd "$projects_path/$name" && docker compose down)
    fi
}

find_projects() {
    list="$(find "$projects_path" -maxdepth 1 -mindepth 1 -type d -printf "%f\n")"
    list="$(add_status_icons "$list" | sort)"

    echo -e "$list"
}

add_status_icons() {
    lines="$1"

    IFS=$'\n'
    for line in $lines; do
        running="$(is_running "$line")"
        if [[ "$running" == "1" ]]; then
            echo -e "\e[32m●\e[0m" "$line"
        else
            echo -e "\e[31m●\e[0m" "$line"
        fi
    done
    unset IFS
}

is_running() {
    name="$1"

    if [[ -z "$name" ]]; then
        echo "0"
        return
    fi

    ps="$(cd "$projects_path/$name" && docker compose ps -q)"

    if [[ -z "$ps" ]]; then
        echo "0"
    else
        echo "1"
    fi
}

docker_menu
